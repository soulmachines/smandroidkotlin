apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.soulmachines.android.sample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName "1.1"
    }
    
    buildFeatures {
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.targetCompatibility
    }
    compileOptions {
        sourceCompatibility rootProject.ext.compileTarget
        targetCompatibility rootProject.ext.compileTarget
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.soulmachines.android.sample'
}

repositories {
    maven {
        url "https://sm-maven-repo-bucket.s3.amazonaws.com"
    }
}

// SM SDK Documentation Task/Dependency
configurations {
    documentation
}

ext {
    constraintlayout = '2.1.4'
    googleMaterialUILib = '1.6.1'
    jjwtVersion = "0.11.2"
    androidXPreference = '1.2.0'
    coreKtxVersion = '1.9.0'
    appCompatVersion = '1.5.1'
    androidXLegacySupport = "legacy-support-v4:1.0.0"
    androidXFragmentVersion = '1.5.3'
    androidXSavedStateVersion = '1.2.0'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.legacy:$androidXLegacySupport"

    //https://github.com/jwtk/jjwt
    //used for the self signed JWT Token example
    api "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly("io.jsonwebtoken:jjwt-orgjson:$jjwtVersion") {
        exclude group: 'org.json', module: 'json' //provided by Android natively so we need to exclude
    }

    implementation "androidx.fragment:fragment-ktx:$androidXFragmentVersion"
    implementation "androidx.savedstate:savedstate-ktx:$androidXSavedStateVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.preference:preference-ktx:$androidXPreference"
    implementation "com.google.android.material:material:$googleMaterialUILib"

    // dependency for the Soul Machine's Core SDK
    implementation 'com.soulmachines.android:smsdk-core:1.3.0-SNAPSHOT'

    // dependency for the Soul Machine's Core SDK Documentation.
    // The documentation (smsdk-core/index.html)
    // can be extracted using the gradle task shown below: [getSmSdkDocumentation].
    documentation 'com.soulmachines.android:smsdk-core:1.3.0-SNAPSHOT:docs@zip'

}


task getSmSdkDocumentation(type: Sync) {
    dependsOn configurations.documentation
    from {
        configurations.documentation.collect { zipTree(it) }
    }
    into "$buildDir/docs/"
}